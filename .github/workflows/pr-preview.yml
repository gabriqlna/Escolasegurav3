name: PR Preview

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main]

jobs:
  changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      web: ${{ steps.changes.outputs.web }}
      mobile: ${{ steps.changes.outputs.mobile }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            web:
              - 'client/**'
              - 'server/**'
              - 'shared/**'
              - 'package*.json'
              - 'tsconfig.json'
              - 'vite.config.ts'
            mobile:
              - 'mobile/**'
              - 'shared/**'

  web-preview:
    name: Web App Preview
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.web == 'true' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build preview
        run: npm run build
        env:
          NODE_ENV: preview
      
      - name: Deploy to preview environment
        run: |
          echo "üöÄ Web app preview build completed"
          echo "Build SHA: ${{ github.sha }}"
          echo "To enable preview deployment, configure one of these services:"
          echo "  - Vercel Preview: Add VERCEL_TOKEN to secrets"
          echo "  - Netlify Deploy Preview: Add NETLIFY_TOKEN to secrets" 
          echo "  - Firebase Hosting Preview: Add firebase config"
          # Add your actual preview deployment here:
          # vercel --token=${{ secrets.VERCEL_TOKEN }}
      
      - name: Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `üì± **Web App Preview**\n\n‚úÖ Build completed successfully!\n\n‚ö†Ô∏è Preview deployment not configured yet. To enable:\n- Add VERCEL_TOKEN or NETLIFY_TOKEN to repository secrets\n- Configure deployment in workflow file\n\n_Build SHA: ${{ github.sha }}_`
            })

  mobile-preview:
    name: Mobile App Preview
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.mobile == 'true' && secrets.EXPO_TOKEN != '' }}
    
    defaults:
      run:
        working-directory: mobile
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: mobile/package-lock.json
      
      - name: Setup Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}
      
      - name: Install dependencies
        run: npm ci
      
      - name: Create Expo preview
        run: |
          eas update --branch=pr-${{ github.event.number }} --message="PR #${{ github.event.number }}: ${{ github.event.pull_request.title }}"
      
      - name: Comment PR with Preview Info
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `üì± **Mobile App Preview**\n\n‚úÖ Expo preview created!\n\n**Test this PR:**\n1. Install Expo Go app\n2. Open link: https://expo.dev/accounts/[your-username]/projects/[your-project]/builds\n3. Or scan QR code from Expo dashboard\n\n‚ö†Ô∏è Update the expo username/project in workflow for direct links\n\n_Updated for commit: ${{ github.sha }}_`
            })

  lighthouse:
    name: Lighthouse Performance Audit
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.web == 'true' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build application
        run: npm run build
      
      - name: Run Lighthouse CI
        run: |
          npm install -g @lhci/cli@0.12.x
          lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}