name: CI/CD - Web App

on:
  push:
    branches: [main, develop]
    paths-ignore:
      - 'mobile/**'
      - '**/*.md'
  pull_request:
    branches: [main]
    paths-ignore:
      - 'mobile/**'
      - '**/*.md'

jobs:
  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: package-lock.json
      
      
      - name: Install dependencies
        run: npm ci
      
      - name: TypeScript type check
        run: npm run check
      
      - name: Build application
        run: npm run build
        
      - name: Archive build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files-${{ matrix.node-version }}
          path: |
            dist/
          retention-days: 7

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Run npm audit
        run: npm audit --audit-level high
        continue-on-error: true
      
      - name: Run Snyk security scan
        uses: snyk/actions/node@0.4.0
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high
        continue-on-error: true

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [build-and-test, security-scan]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build application
        run: npm run build
      
      - name: Deploy to Production
        run: |
          echo "ðŸš€ Ready to deploy to production!"
          echo "Build SHA: ${{ github.sha }}"
          echo "Add your deployment commands here:"
          echo "  - Replit Deploy: Use replit CLI or API"
          echo "  - Vercel: vercel --prod --token=\$VERCEL_TOKEN"
          echo "  - Netlify: netlify deploy --prod --auth=\$NETLIFY_TOKEN"
          echo "  - Custom: Add your deployment script"
          
          # Example placeholder for future implementation:
          # if [ -n "$REPLIT_TOKEN" ]; then
          #   echo "Deploying to Replit..."
          #   # replit deploy commands here
          # fi